// This is a simplified, working paginated editor with DOM-based height check
// You can replace your rich-text-editor.tsx content with this structure

import React, { useState, useEffect, useRef } from 'react';
import ReactQuill from 'react-quill';
import 'react-quill/dist/quill.snow.css';

const PAGE_HEIGHT = 950;

export default function PaginatedEditor() {
  const [pages, setPages] = useState([""]);
  const editorRefs = useRef<(HTMLDivElement | null)[]>([]);

  // Add a page when the last one overflows
  const checkAndAddPage = () => {
    const lastIndex = pages.length - 1;
    const lastRef = editorRefs.current[lastIndex];
    if (!lastRef) return;

    const editorEl = lastRef.querySelector('.ql-editor');
    if (!editorEl) return;

    const contentHeight = editorEl.scrollHeight;
    const visibleHeight = editorEl.clientHeight;

    if (contentHeight > visibleHeight + 5) {
      setPages((prev) => [...prev, ""]);
    }
  };

  const handleChange = (value: string, index: number) => {
    const newPages = [...pages];
    newPages[index] = value;
    setPages(newPages);
  };

  useEffect(() => {
    checkAndAddPage();
  }, [pages]);

  return (
    <div className="editor-container">
      {pages.map((content, index) => (
        <div
          key={index}
          ref={(el) => (editorRefs.current[index] = el)}
          className="page"
        >
          <div className="page-number">Page {index + 1}</div>
          <ReactQuill
            theme="snow"
            value={content}
            onChange={(val) => handleChange(val, index)}
            onBlur={checkAndAddPage}
            placeholder="Start typing..."
          />
        </div>
      ))}

      <style>{`
        .editor-container {
          display: flex;
          flex-direction: column;
          align-items: center;
          gap: 24px;
        }

        .page {
          background: white;
          width: 800px;
          height: ${PAGE_HEIGHT}px;
          padding: 30px;
          box-shadow: 0 0 8px rgba(0, 0, 0, 0.1);
          position: relative;
        }

        .ql-editor {
          height: ${PAGE_HEIGHT - 100}px;
          overflow-y: hidden;
          font-family: 'Times New Roman', serif;
          font-size: 14pt;
        }

        .page-number {
          position: absolute;
          bottom: 10px;
          right: 30px;
          font-size: 12px;
          color: #888;
        }
      `}</style>
    </div>
  );
}
