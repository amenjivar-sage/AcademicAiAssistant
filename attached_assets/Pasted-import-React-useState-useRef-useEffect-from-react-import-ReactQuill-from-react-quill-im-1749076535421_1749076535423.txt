import React, { useState, useRef, useEffect } from "react";
import ReactQuill from "react-quill";
import "react-quill/dist/quill.snow.css";

const PAGE_HEIGHT = 1122; // ~11 inches at 96dpi

export default function MultiPageEditor() {
  const [pages, setPages] = useState([""]);
  const pageRefs = useRef<HTMLDivElement[]>([]);

  const handleChange = (value: string, index: number) => {
    const newPages = [...pages];
    newPages[index] = value;
    setPages(newPages);
  };

  const handleKeyDown = (e: React.KeyboardEvent, index: number) => {
    const currentPage = pageRefs.current[index];
    if (!currentPage) return;

    const bottom = currentPage.scrollHeight;
    const currentScroll = currentPage.scrollTop + currentPage.clientHeight;

    // Trigger when near bottom + Enter is pressed
    if (e.key === "Enter" && currentScroll >= bottom - 10) {
      e.preventDefault();
      const newPages = [...pages];
      newPages.splice(index + 1, 0, "");
      setPages(newPages);

      setTimeout(() => {
        const nextEditor = pageRefs.current[index + 1]?.querySelector(".ql-editor");
        if (nextEditor) {
          nextEditor.focus();
        }
      }, 0);
    }
  };

  return (
    <div className="multi-page-editor">
      {pages.map((content, index) => (
        <div
          key={index}
          ref={(el) => (pageRefs.current[index] = el!)}
          className="page-container"
        >
          <div className="page-header">Page {index + 1}</div>
          <ReactQuill
            theme="snow"
            value={content}
            onChange={(value) => handleChange(value, index)}
            onKeyDown={(e) => handleKeyDown(e, index)}
          />
        </div>
      ))}

      <style>{`
        .multi-page-editor {
          display: flex;
          flex-direction: column;
          align-items: center;
          padding: 20px;
        }

        .page-container {
          width: 800px;
          height: ${PAGE_HEIGHT}px;
          margin: 20px 0;
          padding: 30px;
          box-shadow: 0 0 10px rgba(0,0,0,0.1);
          background: white;
          overflow: hidden;
          position: relative;
        }

        .page-header {
          position: absolute;
          top: 5px;
          left: 30px;
          font-size: 12px;
          color: #888;
        }

        .ql-editor {
          height: 100%;
          font-family: 'Times New Roman', serif;
          font-size: 14pt;
        }
      `}</style>
    </div>
  );
}
